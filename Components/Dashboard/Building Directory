import React, { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { MapPin, Search, ExternalLink, Plus, X } from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";

const BUILDINGS = [
  { code: "JHE", name: "John Hodgins Engineering" },
  { code: "ITB", name: "Information Technology Building" },
  { code: "BSB", name: "Burke Science Building" },
  { code: "HSC", name: "Health Sciences Centre" },
  { code: "MDCL", name: "Michael DeGroote Centre for Learning" },
  { code: "MUSC", name: "McMaster University Student Centre" },
  { code: "ABB", name: "Arthur Bourns Building" },
  { code: "CNH", name: "Chester New Hall" },
  { code: "KTH", name: "Kenneth Taylor Hall" },
  { code: "LRW", name: "L.R. Wilson Hall" },
  { code: "TSH", name: "Togo Salmon Hall" },
  { code: "ETB", name: "Engineering Technology Building" },
];

export default function BuildingDirectory({ searchTerm = "" }) {
  const [localSearch, setLocalSearch] = useState("");
  const [shortcuts, setShortcuts] = useState([]);

  useEffect(() => {
    const stored = localStorage.getItem("machub_shortcuts");
    if (stored) {
      try {
        setShortcuts(JSON.parse(stored));
      } catch (e) {
        console.error("Failed to parse shortcuts");
      }
    }
  }, []);

  const search = searchTerm || localSearch;

  const filtered = BUILDINGS.filter(
    (b) =>
      !search ||
      b.code.toLowerCase().includes(search.toLowerCase()) ||
      b.name.toLowerCase().includes(search.toLowerCase())
  );

  const toggleShortcut = (code) => {
    const updated = shortcuts.includes(code)
      ? shortcuts.filter((c) => c !== code)
      : [...shortcuts, code];
    setShortcuts(updated);
    localStorage.setItem("machub_shortcuts", JSON.stringify(updated));
  };

  const openMap = (code) => {
    window.open(`https://maps.mcmaster.ca?q=${code}`, "_blank", "noreferrer");
  };

  return (
    <Card className="shadow-lg border-gray-200">
      <CardHeader className="border-b border-gray-100 bg-gradient-to-r from-green-50/50 to-teal-50/30">
        <div className="flex items-center gap-2 mb-3">
          <MapPin className="w-5 h-5 text-green-600" />
          <CardTitle className="text-lg">Campus Buildings</CardTitle>
        </div>
        {!searchTerm && (
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" />
            <Input
              placeholder="Search by code or name..."
              value={localSearch}
              onChange={(e) => setLocalSearch(e.target.value)}
              className="pl-10 border-gray-200"
            />
          </div>
        )}
      </CardHeader>
      <CardContent className="p-6">
        {shortcuts.length > 0 && (
          <div className="mb-4 pb-4 border-b border-gray-200">
            <p className="text-xs font-medium text-gray-500 uppercase mb-2">
              Your Shortcuts
            </p>
            <div className="flex flex-wrap gap-2">
              {shortcuts.map((code) => {
                const building = BUILDINGS.find((b) => b.code === code);
                return (
                  <Badge
                    key={code}
                    variant="secondary"
                    className="bg-green-100 text-green-800 pr-1"
                  >
                    {building?.code}
                    <button
                      onClick={() => toggleShortcut(code)-}
                      className="ml-1 hover:bg-green-200 rounded p-0.5"
                    >
                      <X className="w-3 h-3" />
                    </button>
                  </Badge>
                );
              })}
            </div>
          </div>
        )}

        <div className="space-y-2 max-h-64 overflow-y-auto">
          <AnimatePresence>
            {filtered.map((building) => {
              const isShortcut = shortcuts.includes(building.code);
              return (
                <motion.div
                  key={building.code}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  className="flex items-center justify-between p-3 bg-white border border-gray-200 rounded-lg hover:shadow-md transition-shadow"
                >
                  <div>
                    <p className="font-semibold text-gray-900">
                      {building.code}
                    </p>
                    <p className="text-sm text-gray-600">{building.name}</p>
                  </div>
                  <div className="flex items-center gap-2">
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={() => toggleShortcut(building.code)}
                    >
                      {isShortcut ? (
                        <X className="w-4 h-4" />
                      ) : (
                        <Plus className="w-4 h-4" />
                      )}
                    </Button>
                    <Button
                      size="sm"
                      onClick={() => openMap(building.code)}
                      className="bg-green-600 hover:bg-green-700"
                    >
                      <ExternalLink className="w-4 h-4" />
                    </Button>
                  </div>
                </motion.div>
              );
            })}
          </AnimatePresence>
        </div>
      </CardContent>
    </Card>
  );
}